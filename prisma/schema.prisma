// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["orderByRelation"]
}

model Gods {
    id                         Int       @id
    name                       String    @unique
    pantheon                   Pantheons @relation(fields: [pantheonId], references: [id])
    pantheonId                 Int
    roles                      String
    title                      String
    type                       String
    lore                       String
    pros                       String
    cons                       String
    autoBanned                 Boolean   @default(false)
    onFreeRotation             Boolean   @default(false)
    latestGod                  Boolean   @default(false)
    ability1                   String
    ability2                   String
    ability3                   String
    ability4                   String
    ability5                   String
    abilityThumbnail1          String
    abilityThumbnail2          String
    abilityThumbnail3          String
    abilityThumbnail4          String
    abilityThumbnail5          String
    basicAttack                String
    attackSpeed                Float     @default(0)
    AttackSpeedPerLevel        Float     @default(0)
    hp5PerLevel                Float     @default(0)
    health                     Int       @default(0)
    healthPerLevel             Int       @default(0)
    mp5PerLevel                Float     @default(0)
    magicProtection            Int       @default(0)
    magicProtectionPerLevel    Float     @default(0)
    magicalPower               Int       @default(0)
    magicalPowerPerLevel       Float     @default(0)
    mana                       Int       @default(0)
    manaPerFive                Float     @default(0)
    manaPerLevel               Int       @default(0)
    physicalPower              Int       @default(0)
    physicalPowerPerLevel      Float     @default(0)
    physicalProtection         Int       @default(0)
    physicalProtectionPerLevel Float     @default(0)
    speed                      Int       @default(0)
    godCardUrl                 String
    godIconUrl                 String
    skins                      Skins[]
}

model Pantheons {
    id   Int    @id @default(autoincrement())
    name String @unique
    gods Gods[]
}

model Skins {
    id              Int               @id
    god             Gods              @relation(fields: [godId], references: [id])
    godId           Int
    name            String            @unique
    godIconUrl      String
    godSkinUrl      String
    obtainability   SkinObtainability @relation(fields: [obtainabilityId], references: [id])
    obtainabilityId Int
    priceFavor      Int
    priceGems       Int
    player          Players?          @relation(name: "PlayerSkins", fields: [playerId], references: [id])
    playerId        String?
    wishedByPlayer  Players[]         @relation("PlayersWishes")
}

model SkinObtainability {
    id     Int     @id @default(autoincrement())
    name   String  @unique
    weight Int     @default(1)
    Skins  Skins[]
}

model Players {
    id           String   @id
    skins        Skins[]  @relation(name: "PlayerSkins")
    wishedSkins  Skins[]  @relation(name: "PlayersWishes")
    lastSkinDate DateTime @default(now())
    isNew        Boolean  @default(true)
}
