// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Gods {
    id                         Int       @id
    name                       String    @unique
    pantheon                   Pantheons @relation(fields: [pantheonId], references: [id])
    pantheonId                 Int
    roles                      String
    title                      String
    type                       String
    lore                       String
    pros                       String?
    cons                       String?
    autoBanned                 Boolean   @default(false)
    onFreeRotation             Boolean   @default(false)
    latestGod                  Boolean   @default(false)
    ability1                   String
    ability2                   String
    ability3                   String
    ability4                   String
    ability5                   String
    abilityThumbnail1          String
    abilityThumbnail2          String
    abilityThumbnail3          String
    abilityThumbnail4          String
    abilityThumbnail5          String
    basicAttack                String
    attackSpeed                Float     @default(0)
    AttackSpeedPerLevel        Float     @default(0)
    hp5PerLevel                Float     @default(0)
    health                     Int       @default(0)
    healthPerLevel             Int       @default(0)
    mp5PerLevel                Float     @default(0)
    magicProtection            Int       @default(0)
    magicProtectionPerLevel    Float     @default(0)
    magicalPower               Int       @default(0)
    magicalPowerPerLevel       Float     @default(0)
    mana                       Int       @default(0)
    manaPerFive                Float     @default(0)
    manaPerLevel               Int       @default(0)
    physicalPower              Int       @default(0)
    physicalPowerPerLevel      Float     @default(0)
    physicalProtection         Int       @default(0)
    physicalProtectionPerLevel Float     @default(0)
    speed                      Int       @default(0)
    godCardUrl                 String?
    godIconUrl                 String
    skins                      Skins[]
}

model Pantheons {
    id   Int    @id @default(autoincrement())
    name String @unique
    gods Gods[]
}

model Skins {
    id              Int                  @id
    god             Gods                 @relation(fields: [godId], references: [id])
    godId           Int
    name            String
    godIconUrl      String
    godSkinUrl      String
    obtainability   SkinsObtainability?  @relation(fields: [obtainabilityId], references: [id])
    obtainabilityId Int?
    priceFavor      Int                  @default(0)
    priceGems       Int                  @default(0)
    releaseDate     DateTime?
    playersSkins    PlayersSkins[]
    playersWishes   PlayersWishedSkins[]
}

model SkinsObtainability {
    id    Int     @id @default(autoincrement())
    name  String  @unique
    Skins Skins[]
}

model Players {
    userId        String
    guild         Guilds               @relation(fields: [guildId], references: [id])
    guildId       String
    lastClaimDate DateTime?
    isBanned      Boolean              @default(false)
    banStartDate  DateTime?
    banEndDate    DateTime?
    banCount      Int?                 @default(0)
    playersSkins  PlayersSkins[]
    wishedSkins   PlayersWishedSkins[]

    @@id([userId, guildId])
}

model Guilds {
    id      String    @id
    players Players[]
}

model PlayersSkins {
    guildId           String
    skin              Skins     @relation(fields: [skinId], references: [id])
    skinId            Int
    player            Players   @relation(fields: [userId, guildId], references: [userId, guildId])
    userId            String
    isExhausted       Boolean?  @default(false)
    exhaustChangeDate DateTime?

    @@id([guildId, skinId])
}

model PlayersWishedSkins {
    player  Players @relation(fields: [userId, guildId], references: [userId, guildId])
    userId  String
    guildId String
    skin    Skins   @relation(fields: [skinId], references: [id])
    skinId  Int

    @@id([userId, guildId, skinId])
}
